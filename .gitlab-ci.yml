stages:
  - test
  - build
  - image
  - tag

.build:go: &go-job
  stage: build
  image: andrexus/golang-dep
  tags:
    - runner:k8s
    - compute:high
  variables:
    GOPATH: /build

  before_script:
    - dep ensure
  artifacts:
    expire_in: 1 hour
    paths:
      - bin/
  cache:
    paths:
      - vendor

test:go:
  <<: *go-job
  stage: test
  script:
    - go test -cover ./...

build:go:darwin-x86:
  <<: *go-job
  script:
    - GOOS=darwin GOARCH=386 go build -o bin/togo_linux-386
    - GOOS=darwin GOARCH=amd64 go build -o bin/togo_linux-amd64
    - gzip bin/*

build:go:linux-arm:
  <<: *go-job
  script:
    - GOOS=linux GOARCH=arm go build -o bin/togo_linux-arm
    - GOOS=linux GOARCH=arm64 go build -o bin/togo_linux-arm64
    - gzip bin/*

build:go:linux-x86:
  <<: *go-job
  script:
    - GOOS=linux GOARCH=386 go build -o bin/togo_linux-386
    - GOOS=linux GOARCH=amd64 go build -o bin/togo_linux-amd64
    - gzip bin/*

# always build an image (tagged by branch), publish tags to latest
.build:docker: &build-docker
  image: docker
  services:
    - docker:dind
  tags:
    - runner:k8s
    - cloud:aws

  before_script:
    # prep secrets
    - mkdir /root/.docker
    - ln -s /secrets/docker /root/.docker/config.json
    - docker info
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
    IMAGE_TAG: ssube/togo:$CI_COMMIT_REF_SLUG
 
build:image:
  <<: *build-docker
  stage: image
 
  dependencies:
    - build:go:linux-x86
  script:
    # build it
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

# tag releases
tag:latest:
  <<: *build-docker
  stage: tag
  only:
    - master

  script:
    # build it
    - docker pull ssube/togo:master
    - docker tag ssube/togo:master ssube/togo:latest
    - docker push ssube/togo:latest

tag:version:
  <<: *build-docker
  stage: tag
  only:
    - tags

  script:
    # build it
    - docker pull ssube/togo:master
    - docker tag ssube/togo:master ssube/togo:${CI_COMMIT_TAG}
    - docker push ssube/togo:${CI_COMMIT_TAG}
